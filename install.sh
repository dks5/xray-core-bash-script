#!/bin/bash
# –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç—Ä–æ–≥–∏–π —Ä–µ–∂–∏–º –¥–ª—è –±–æ–ª—å—à–µ–π –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
set -euo pipefail

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ root-–ø—Ä–∞–≤–∞ ---
if [[ $EUID -ne 0 ]]; then
    echo "‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω —Å –ø—Ä–∞–≤–∞–º–∏ root."
    echo "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ sudo."
    exit 1
fi

# --- –£–õ–£–ß–®–ï–ù–ò–ï: –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π ---
echo "‚öôÔ∏è  –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞–∫–µ—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
PKG_CMD=""
if command -v apt-get &>/dev/null; then
    PKG_CMD="apt-get -y install"
    apt-get update
elif command -v dnf &>/dev/null; then
    PKG_CMD="dnf -y install"
elif command -v pacman &>/dev/null; then
    PKG_CMD="pacman -S --noconfirm"
else
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–∞–∫–µ—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä (apt, dnf, pacman). –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ 'qrencode', 'curl', 'jq' –≤—Ä—É—á–Ω—É—é." >&2
    exit 1
fi
$PKG_CMD qrencode curl jq

# --- –í–∫–ª—é—á–∞–µ–º BBR ---
echo "üöÄ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –≤–∫–ª—é—á–∞–µ–º TCP BBR..."
if ! sysctl net.ipv4.tcp_congestion_control | grep -q "bbr"; then
    echo "net.core.default_qdisc=fq" >> /etc/sysctl.conf
    echo "net.ipv4.tcp_congestion_control=bbr" >> /etc/sysctl.conf
    sysctl -p
    echo "‚úÖ BBR –≤–∫–ª—é—á–µ–Ω."
else
    echo "‚úÖ BBR —É–∂–µ –≤–∫–ª—é—á–µ–Ω."
fi

# --- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —è–¥—Ä–∞ Xray ---
# –í–ù–ò–ú–ê–ù–ò–ï: –ú—ã –¥–æ–≤–µ—Ä—è–µ–º —Å–∫—Ä–∏–ø—Ç—É —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å GitHub. –≠—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞, –Ω–æ –Ω–µ—Å–µ—Ç –≤ —Å–µ–±–µ —Ä–∏—Å–∫–∏.
echo "üì• –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Xray-core..."
XRAY_INSTALL_URL="https://github.com/XTLS/Xray-install/raw/main/install-release.sh"
XRAY_INSTALL_SCRIPT=$(mktemp)
# –°–∫–∞—á–∏–≤–∞–µ–º —Å–∫—Ä–∏–ø—Ç, –∞ –∑–∞—Ç–µ–º –≤—ã–ø–æ–ª–Ω—è–µ–º –µ–≥–æ. –≠—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–µ–µ, —á–µ–º 'curl | bash'.
curl -4 -L -o "$XRAY_INSTALL_SCRIPT" "$XRAY_INSTALL_URL"
bash "$XRAY_INSTALL_SCRIPT" @ install
rm -f "$XRAY_INSTALL_SCRIPT"

# --- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–π –∏ shortId –¥–ª—è Reality ---
echo "üîë –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª—é—á–∏ –¥–ª—è Reality..."
CONFIG_FILE="/usr/local/etc/xray/config.json"
KEYS_FILE="/usr/local/etc/xray/.keys.json" # –ò–ó–ú–ï–ù–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º JSON
mkdir -p "$(dirname "$KEYS_FILE")"

uuid=$(xray uuid)
keys_output=$(xray x25519)
private_key=$(echo "$keys_output" | awk -F': ' '/Private key/ {print $2}')
public_key=$(echo "$keys_output" | awk -F': ' '/Public key/ {print $2}')
short_id=$(openssl rand -hex 8)

# --- –£–õ–£–ß–®–ï–ù–ò–ï: –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª—é—á–∏ –≤ –Ω–∞–¥–µ–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ JSON ---
jq -n \
  --arg uuid "$uuid" \
  --arg pk "$private_key" \
  --arg pubk "$public_key" \
  --arg sid "$short_id" \
  '{uuid: $uuid, privateKey: $pk, publicKey: $pubk, shortId: $sid}' > "$KEYS_FILE"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø—Ä–∞–≤–∞ –Ω–∞ —Ñ–∞–π–ª —Å –∫–ª—é—á–∞–º–∏
chmod 600 "$KEYS_FILE"

# --- –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
echo ""
read -p "–í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω –¥–ª—è Reality (–Ω–∞–ø—Ä–∏–º–µ—Ä, github.com): " server_name
server_name=${server_name:-"github.com"}

read -p "–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—Ç –¥–ª—è –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è [–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 443]: " xray_port
xray_port=${xray_port:-443}

echo "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–æ–º–µ–Ω: $server_name –∏ –ø–æ—Ä—Ç: $xray_port"
echo ""

# --- –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Xray ---
echo "üìù –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Xray..."
cat << EOF > "$CONFIG_FILE"
{
    "log": {"loglevel": "warning"},
    "routing": {
        "domainStrategy": "IPIfNonMatch",
        "rules": [
            {"type": "field", "outboundTag": "block", "domain": ["geosite:category-ads-all"]},
            {"type": "field", "outboundTag": "block", "ip": ["geoip:cn"]}
        ]
    },
    "inbounds": [
        {
            "listen": "0.0.0.0",
            "port": $xray_port,
            "protocol": "vless",
            "settings": {
                "clients": [
                    {
                        "id": "$uuid",
                        "email": "main",
                        "flow": "xtls-rprx-vision"
                    }
                ],
                "decryption": "none"
            },
            "streamSettings": {
                "network": "tcp",
                "security": "reality",
                "realitySettings": {
                    "show": false,
                    "dest": "$server_name:443",
                    "xver": 0,
                    "serverNames": ["$server_name"],
                    "privateKey": "$private_key",
                    "shortIds": ["$short_id"]
                }
            },
            "sniffing": {"enabled": true, "destOverride": ["http", "tls"]}
        }
    ],
    "outbounds": [
        {"protocol": "freedom", "tag": "direct"},
        {"protocol": "blackhole", "tag": "block"}
    ],
    "policy": {"levels": {"0": {"handshake": 3, "connIdle": 180}}}
}
EOF

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø—Ä–∞–≤–∞ –Ω–∞ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
chmod 600 "$CONFIG_FILE"

# --- –°–æ–∑–¥–∞–µ–º –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è ---
echo "üõ†Ô∏è  –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏..."

# --- –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è IP ---
cat << 'EOF' > /usr/local/bin/get_public_ip
#!/bin/bash
set -eo pipefail
ip=$(curl -4 -s icanhazip.com || curl -4 -s ifconfig.me || curl -4 -s api.ipify.org)
if [[ -z "$ip" ]]; then echo "–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—É–±–ª–∏—á–Ω—ã–π IP-–∞–¥—Ä–µ—Å." >&2; exit 1; fi
echo "$ip"
EOF
chmod +x /usr/local/bin/get_public_ip


# --- userlist ---
cat << 'EOF' > /usr/local/bin/userlist
#!/bin/bash
set -euo pipefail
CONFIG_FILE="/usr/local/etc/xray/config.json"
get_vless_inbound_index() {
  jq 'map(.protocol == "vless") | index(true)' <<< "$(jq '.inbounds' "$CONFIG_FILE")"
}
vless_inbound_index=$(get_vless_inbound_index)
if [[ "$vless_inbound_index" == "null" ]]; then echo "VLESS inbound –Ω–µ –Ω–∞–π–¥–µ–Ω." >&2; exit 1; fi
emails=($(jq -r ".inbounds[$vless_inbound_index].settings.clients[].email" "$CONFIG_FILE"))
if [[ ${#emails[@]} -eq 0 ]]; then echo "–°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø—É—Å—Ç."; exit 0; fi
echo "–°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤:"
for i in "${!emails[@]}"; do echo "$(($i+1)). ${emails[$i]}"; done
EOF
chmod +x /usr/local/bin/userlist


# --- newuser ---
cat << 'EOF' > /usr/local/bin/newuser
#!/bin/bash
set -euo pipefail
CONFIG_FILE="/usr/local/etc/xray/config.json"
LOCK_FILE="/var/lock/xray_config.lock"
get_vless_inbound_index() {
  jq 'map(.protocol == "vless") | index(true)' <<< "$(jq '.inbounds' "$CONFIG_FILE")"
}
(
    flock -x 200
    if ! command -v jq &>/dev/null; then echo "jq –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω." >&2; exit 1; fi
    read -p "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (email): " email
    if [[ -z "$email" || "$email" == *" "* ]]; then echo "–ò–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã." >&2; exit 1; fi
    
    vless_inbound_index=$(get_vless_inbound_index)
    if [[ "$vless_inbound_index" == "null" ]]; then echo "VLESS inbound –Ω–µ –Ω–∞–π–¥–µ–Ω." >&2; exit 1; fi
    
    if jq -e --arg email "$email" ".inbounds[$vless_inbound_index].settings.clients[] | select(.email == \$email)" "$CONFIG_FILE" > /dev/null; then
        echo "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '$email' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç." >&2; exit 1
    fi
    uuid=$(xray uuid)
    cp "$CONFIG_FILE" "$CONFIG_FILE.bak"
    jq --arg email "$email" --arg uuid "$uuid" --argjson idx "$vless_inbound_index" \
       ".inbounds[\$idx].settings.clients += [{\"email\": \$email, \"id\": \$uuid, \"flow\": \"xtls-rprx-vision\"}]" \
       "$CONFIG_FILE" > "${CONFIG_FILE}.tmp" && mv "${CONFIG_FILE}.tmp" "$CONFIG_FILE"
    echo "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '$email' –¥–æ–±–∞–≤–ª–µ–Ω. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Xray..."
    systemctl restart xray
    echo "–°–µ—Ä–≤–∏—Å –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω."
    sharelink "$email"
) 200>"$LOCK_FILE"
EOF
chmod +x /usr/local/bin/newuser


# --- rmuser (–£–õ–£–ß–®–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø) ---
cat << 'EOF' > /usr/local/bin/rmuser
#!/bin/bash
set -euo pipefail
CONFIG_FILE="/usr/local/etc/xray/config.json"
LOCK_FILE="/var/lock/xray_config.lock"
get_vless_inbound_index() {
  jq 'map(.protocol == "vless") | index(true)' <<< "$(jq '.inbounds' "$CONFIG_FILE")"
}
(
    flock -x 200
    if ! command -v jq &>/dev/null; then echo "jq –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω." >&2; exit 1; fi
    vless_inbound_index=$(get_vless_inbound_index)
    if [[ "$vless_inbound_index" == "null" ]]; then echo "VLESS inbound –Ω–µ –Ω–∞–π–¥–µ–Ω." >&2; exit 1; fi
    
    # –ò–ó–ú–ï–ù–ï–ù–û: –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –ö–†–û–ú–ï 'main'
    mapfile -t emails < <(jq -r ".inbounds[$vless_inbound_index].settings.clients[] | select(.email != \"main\") | .email" "$CONFIG_FILE")
    
    if [[ ${#emails[@]} -eq 0 ]]; then echo "–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (–∫—Ä–æ–º–µ 'main')."; exit 0; fi
    echo "–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:"
    for i in "${!emails[@]}"; do echo "$(($i+1)). ${emails[$i]}"; done
    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–ª–∏–µ–Ω—Ç–∞: " choice
    if ! [[ "$choice" =~ ^[0-9]+$ ]] || (( choice < 1 || choice > ${#emails[@]} )); then
        echo "–û—à–∏–±–∫–∞: –Ω–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ ${#emails[@]}." >&2; exit 1
    fi
    selected_email="${emails[$((choice-1))]}"
    read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å '$selected_email'? (y/n) " confirm
    if [[ "$confirm" != "y" ]]; then echo "–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ."; exit 0; fi
    cp "$CONFIG_FILE" "$CONFIG_FILE.bak"
    jq --arg email "$selected_email" --argjson idx "$vless_inbound_index" \
       "(.inbounds[\$idx].settings.clients) |= map(select(.email != \$email))" \
       "$CONFIG_FILE" > "${CONFIG_FILE}.tmp" && mv "${CONFIG_FILE}.tmp" "$CONFIG_FILE"
    echo "–ö–ª–∏–µ–Ω—Ç '$selected_email' —É–¥–∞–ª—ë–Ω. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Xray..."
    systemctl restart xray
    echo "–°–µ—Ä–≤–∏—Å –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω."
) 200>"$LOCK_FILE"
EOF
chmod +x /usr/local/bin/rmuser


# --- sharelink (–û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø –° JSON) ---
cat << 'EOF' > /usr/local/bin/sharelink
#!/bin/bash
set -euo pipefail
CONFIG_FILE="/usr/local/etc/xray/config.json"
KEYS_FILE="/usr/local/etc/xray/.keys.json" # –ò–ó–ú–ï–ù–ï–ù–û: —á–∏—Ç–∞–µ–º –∏–∑ JSON
get_vless_inbound_index() {
  jq 'map(.protocol == "vless") | index(true)' <<< "$(jq '.inbounds' "$CONFIG_FILE")"
}
generate_link() {
    local email=$1
    local vless_inbound_index=$2
    local uuid
    uuid=$(jq -r --arg email "$email" --argjson idx "$vless_inbound_index" \
        '.inbounds[$idx].settings.clients[] | select(.email == $email) | .id' "$CONFIG_FILE")
    if [[ -z "$uuid" ]]; then echo "–ö–ª–∏–µ–Ω—Ç '$email' –Ω–µ –Ω–∞–π–¥–µ–Ω." >&2; return 1; fi

    local ip
    ip=$(get_public_ip)
    
    # –£–õ–£–ß–®–ï–ù–ò–ï: –ß–∏—Ç–∞–µ–º –∫–ª—é—á–∏ –∏–∑ JSON-—Ñ–∞–π–ª–∞ —Å –ø–æ–º–æ—â—å—é jq. –ë–æ–ª—å—à–µ –Ω–∏–∫–∞–∫–æ–≥–æ awk!
    local publickey shortid port sni
    publickey=$(jq -r '.publicKey' "$KEYS_FILE")
    shortid=$(jq -r '.shortId' "$KEYS_FILE")
    port=$(jq -r ".inbounds[$vless_inbound_index].port" "$CONFIG_FILE")
    sni=$(jq -r ".inbounds[$vless_inbound_index].streamSettings.realitySettings.serverNames[0]" "$CONFIG_FILE")
    
    if [[ -z "$publickey" || -z "$shortid" || -z "$port" || -z "$sni" ]]; then
        echo "–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ —Ñ–∞–π–ª–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏." >&2; return 1;
    fi

    local link="vless://$uuid@$ip:$port?security=reality&sni=$sni&fp=chrome&pbk=$publickey&sid=$shortid&type=tcp&flow=xtls-rprx-vision&encryption=none#$email"
    echo -e "\n--- –°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è '$email' ---\n$link\n\nQR-–∫–æ–¥:"
    qrencode -t ansiutf8 <<< "$link"
}
# --- –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ ---
vless_inbound_index=$(get_vless_inbound_index)
if [[ "$vless_inbound_index" == "null" ]]; then echo "VLESS inbound –Ω–µ –Ω–∞–π–¥–µ–Ω." >&2; exit 1; fi
if [[ $# -gt 0 ]]; then
    generate_link "$1" "$vless_inbound_index"
    exit 0
fi
mapfile -t emails < <(jq -r ".inbounds[$vless_inbound_index].settings.clients[].email" "$CONFIG_FILE")
if [[ ${#emails[@]} -eq 0 ]]; then echo "–°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø—É—Å—Ç."; exit 0; fi
echo "–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Å—ã–ª–∫–∏:"
for i in "${!emails[@]}"; do echo "$(($i+1)). ${emails[$i]}"; done
read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–ª–∏–µ–Ω—Ç–∞: " choice
if ! [[ "$choice" =~ ^[0-9]+$ ]] || (( choice < 1 || choice > ${#emails[@]} )); then
    echo "–û—à–∏–±–∫–∞: –Ω–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ ${#emails[@]}." >&2; exit 1
fi
generate_link "${emails[$((choice-1))]}" "$vless_inbound_index"
EOF
chmod +x /usr/local/bin/sharelink

# –°–æ–∑–¥–∞–µ–º —É–¥–æ–±–Ω—ã–π —Å–∏–º–ª–∏–Ω–∫ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
ln -s /usr/local/bin/sharelink /usr/local/bin/mainuser

# --- –ù–û–í–û–ï: –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–∏–Ω—Å—Ç–∞–ª–ª—è—Ü–∏–∏ ---
TARGET_HOME=${SUDO_USER_HOME:-$HOME}
UNINSTALL_SCRIPT="$TARGET_HOME/uninstall_xray.sh"
echo "‚ÑπÔ∏è  –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤ $UNINSTALL_SCRIPT"
cat << EOF > "$UNINSTALL_SCRIPT"
#!/bin/bash
set -e
echo "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–∏—Ç—å Xray –∏ –≤—Å–µ –µ–≥–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏?"
read -p "–í–≤–µ–¥–∏—Ç–µ 'yes' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: " confirm
if [[ "\$confirm" != "yes" ]]; then
    echo "–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ."
    exit 0
fi

echo "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ –æ—Ç–∫–ª—é—á–∞–µ–º —Å–µ—Ä–≤–∏—Å Xray..."
systemctl stop xray
systemctl disable xray

echo "–£–¥–∞–ª—è–µ–º —É–ø—Ä–∞–≤–ª—è—é—â–∏–µ —Å–∫—Ä–∏–ø—Ç—ã..."
rm -f /usr/local/bin/{get_public_ip,userlist,newuser,rmuser,sharelink,mainuser}

echo "–£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –∫–ª—é—á–µ–π..."
rm -rf /usr/local/etc/xray

echo "–£–¥–∞–ª—è–µ–º –ª–æ–∫-—Ñ–∞–π–ª..."
rm -f /var/lock/xray_config.lock

echo "–ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –¥–µ–∏–Ω—Å—Ç–∞–ª–ª—è—Ç–æ—Ä Xray-core..."
# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–∞–º–æ–≥–æ —è–¥—Ä–∞ Xray
if [[ -f "/usr/local/bin/xray" ]]; then
    bash <(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh) @ remove --purge
fi

echo "–£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø–æ–º–æ—â–∏ –∏ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–µ–∏–Ω—Å—Ç–∞–ª–ª—è—Ü–∏–∏..."
rm -f "$TARGET_HOME/xray_help.txt"
rm -f "\$0"

echo "‚úÖ Xray —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ —Å–∏—Å—Ç–µ–º—ã."
EOF
chmod +x "$UNINSTALL_SCRIPT"

# --- –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ ---
systemctl restart xray
echo "‚úÖ Xray-core —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω."

HELP_FILE="$TARGET_HOME/xray_help.txt"
# –û–ë–ù–û–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ sudo –∏ uninstall
cat << EOF > "$HELP_FILE"
üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Xray –∑–∞–≤–µ—Ä—à–µ–Ω–∞!

–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:
    mainuser          - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ('main')
    newuser           - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    rmuser            - –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    userlist          - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    sharelink [email] - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–º (—Ç—Ä–µ–±—É–µ—Ç—Å—è sudo):
    sudo systemctl restart xray
    sudo systemctl status xray
    sudo journalctl -u xray -f --no-pager

–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã:
    –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: /usr/local/etc/xray/config.json
    –ö–ª—é—á–∏ Reality: /usr/local/etc/xray/.keys.json

–£–¥–∞–ª–µ–Ω–∏–µ:
    –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è Xray –∏ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç:
    bash $UNINSTALL_SCRIPT
EOF

echo ""
echo "üìù –ü–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª–µ: $HELP_FILE"
echo "–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Ö –∫–æ–º–∞–Ω–¥–æ–π: cat \"$HELP_FILE\""
echo ""
echo "--- üîó –°—Å—ã–ª–∫–∞ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ('main') ---"
sharelink "main"
